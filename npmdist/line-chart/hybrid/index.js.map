{"version":3,"sources":["../../../modules/line-chart/hybrid/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport {\n  createUniqueID,\n  defaultStyles,\n  getDefaultAxisStyles\n} from './LineChart/common';\nimport { Style } from 'radium';\nimport merge from 'lodash.merge';\n\nimport lineChart from './LineChart';\n\nexport default class LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.uid = createUniqueID();\n  }\n\n  componentDidMount() {\n    const {\n      chart\n    } = this.refs;\n\n    const props = this.props;\n\n    lineChart.initialise(chart, props);\n  }\n\n  componentDidUpdate() {\n    const {\n      chart\n    } = this.refs;\n\n    const props = this.props;\n\n    lineChart.transition(chart, props);\n  }\n\n  createStyle() {\n    const {\n      style,\n      grid,\n      vGrid,\n      hGrid,\n      orient\n    } = this.props;\n\n    const uid = this.uid;\n    const scope = `.line-chart-${uid}`;\n    const defaultAxisStyles = getDefaultAxisStyles(vGrid || grid, hGrid || grid, orient);\n    const rules = merge({}, defaultStyles, style, defaultAxisStyles);\n\n    return (\n      <Style\n        scopeSelector={scope}\n        rules={rules}\n      />\n    );\n  }\n\n  render() {\n    const {\n      width,\n      height\n    } = this.props;\n\n    const uid = this.uid;\n    const className = `line-chart-${uid}`;\n\n    return (\n      <div ref=\"lineChart\" className={className}>\n        {this.createStyle()}\n        <svg ref=\"chart\" width={width} height={height} />\n      </div>\n    );\n  }\n}\n\nLineChart.propTypes = {\n  data: React.PropTypes.array.isRequired,\n  axes: React.PropTypes.bool,\n  grid: React.PropTypes.bool,\n  hGrid: React.PropTypes.bool,\n  vGrid: React.PropTypes.bool,\n  type: React.PropTypes.string,\n  xType: React.PropTypes.string,\n  yType: React.PropTypes.string,\n  interpolate: React.PropTypes.string,\n  margin: React.PropTypes.shape({\n    top: React.PropTypes.number,\n    right: React.PropTypes.number,\n    bottom: React.PropTypes.number,\n    left: React.PropTypes.number\n  }),\n  width: React.PropTypes.number,\n  height: React.PropTypes.number,\n  orient: React.PropTypes.string,\n  colors: React.PropTypes.array,\n  strokeWidth: React.PropTypes.number,\n  stroke: React.PropTypes.object,\n  style: React.PropTypes.object,\n  xLabel: React.PropTypes.string,\n  yLabel: React.PropTypes.string,\n  xDomain: React.PropTypes.array,\n  yDomain: React.PropTypes.array,\n  pattern: React.PropTypes.string,\n  xPattern: React.PropTypes.string,\n  yPattern: React.PropTypes.string\n};\n\nLineChart.defaultProps = {\n  type: 'linear',\n  xType: 'linear',\n  yType: 'linear',\n  interpolate: 'linear',\n  margin: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  },\n  orient: 'left',\n  colors: [],\n  strokeWidth: 2,\n  style: {}\n};\n"]}