{"version":3,"sources":["../../../../modules/line-chart/hybrid/LineChart/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import {\n  select,\n  svg\n} from 'd3';\n\nimport {\n  // createUniqueID,\n  reduce,\n  // defaultStyles,\n  // getDefaultAxisStyles,\n  defaultColors,\n  createDomainX,\n  createDomainY,\n  createScaleX,\n  createScaleY,\n  createParserX,\n  createParserY // ,\n  // createFormatX,\n  // createFormatY\n} from './common';\n\nfunction initialise(chart, props) {\n  const {\n    data,\n    // axes,\n    type,\n    xType,\n    yType,\n    grid,\n    hGrid,\n    vGrid,\n    width,\n    height,\n    margin,\n    orient,\n    xLabel,\n    yLabel,\n    colors,\n    // strokeWidth,\n    interpolate,\n    pattern,\n    // xPattern,\n    // yPattern,\n    xDomain,\n    yDomain\n  } = props;\n\n  const {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  } = margin;\n\n  const m = {\n    t,\n    r,\n    b,\n    l\n  };\n\n  const w = [\n    width,\n    l,  // margin.left\n    r   // margin.right\n  ].reduce(reduce);\n\n  const h = [\n    height,\n    t,  // margin.top\n    b   // margin.bottom\n  ].reduce(reduce);\n\n  const strokes = colors.concat(defaultColors);\n\n  const types = {\n    x: xType || type,\n    y: yType || type\n  };\n\n  const domains = {\n    x: (Array.isArray(xDomain))\n      ? xDomain\n      : createDomainX(types.x, data, pattern),\n    y: (Array.isArray(yDomain))\n      ? yDomain\n      : createDomainY(types.y, data, pattern)\n  };\n\n  const scales = {\n    x: createScaleX(types.x, domains.x, w),\n    y: createScaleY(types.y, domains.y, h)\n  };\n\n  const parsers = {\n    x: createParserX(types.x, pattern),\n    y: createParserY(types.y, pattern)\n  };\n\n  /*\n  const patterns = {\n    x: xPattern || pattern,\n    y: yPattern || pattern\n  };\n\n  const formats = {\n    x: createFormatX(types.x, patterns.x),\n    y: createFormatY(types.y, patterns.y)\n  };\n  */\n\n  const linePath = svg.line()\n    .interpolate(interpolate)\n    .x((d) => scales.x(parsers.x(d)))\n    .y((d) => scales.y(parsers.y(d)));\n\n  const root = select(chart)\n    .append('g')\n    .attr('class', 'chartGroup')\n    .attr('transform', `translate(${l}, ${t})`);\n\n  const xAxis = svg.axis()\n    .scale(scales.x)\n    .orient('bottom');\n\n  if (vGrid || grid) {\n    xAxis\n      .tickSize(-h, 6)\n      .tickPadding(10);\n  } else {\n    xAxis\n      .tickSize(0, 6)\n      .tickPadding(16);\n  }\n\n  const xGroup = root\n    .append('g')\n    .attr('class', 'x axis')\n    .attr('transform', `translate(0, ${h})`);\n\n  xGroup\n    .call(xAxis);\n\n  if (xLabel) {\n    xGroup\n      .append('text')\n      .attr('class', 'label')\n      .attr('x', (orient === 'right')\n          ? 0\n          : w)\n      .attr('y', (m.b - m.t))\n      .attr('dx', (orient === 'right')\n        ? '0em'\n        : '-.175em')\n      .attr('dy', '-.175em')\n      .style('dominant-baseline', 'ideographic')\n      .style('text-anchor', (orient === 'right')\n        ? 'start'\n        : 'end')\n      .text(xLabel);\n  }\n\n  const yAxis = svg.axis()\n    .scale(scales.y)\n    .orient((orient === 'right')\n      ? 'right'\n      : 'left');\n\n  if (hGrid || grid) {\n    yAxis\n      .tickSize(-w, 6)\n      .tickPadding(10);\n  } else {\n    yAxis\n      .tickSize(0, 6)\n      .tickPadding(16);\n  }\n\n  const yGroup = root\n    .append('g')\n    .attr('class', 'y axis')\n    .attr('transform', (orient === 'right')\n      ? `translate(${w}, 0)`\n      : 'translate(0, 0)');\n\n  yGroup\n    .call(yAxis);\n\n  if (yLabel) {\n    yGroup\n      .append('text')\n      .attr('class', 'label')\n      .attr('transform', 'rotate(-90)')\n      .attr('x', 0)\n      .attr('y', (orient === 'right')\n        ? +m.r - m.l\n        : -m.l + m.r)\n      .attr('dx', 0)\n      .attr('dy', (orient === 'right')\n        ? '-.175em'\n        : '1em')\n      .style('dominant-baseline', 'ideographic')\n      .style('text-anchor', 'end')\n      .text(yLabel);\n  }\n\n  const getStroke = (d, i) => strokes[i];\n\n  const chartPathsGroup = root\n    .append('g')\n    .attr('class', 'chartPathsGroup');\n\n  chartPathsGroup\n    .selectAll('path')\n    .data(data)\n    .enter()\n    .append('path')\n    .attr('class', 'line')\n    .style('stroke', getStroke)\n    .attr('d', linePath);\n}\n\nfunction transition(chart, props) {\n  const {\n    data,\n    // axes,\n    type,\n    xType,\n    yType,\n    grid,\n    hGrid,\n    vGrid,\n    width,\n    height,\n    margin,\n    orient,\n    xLabel,\n    yLabel,\n    colors,\n    // strokeWidth,\n    interpolate,\n    pattern,\n    // xPattern,\n    // yPattern,\n    xDomain,\n    yDomain\n  } = props;\n\n  const {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  } = margin;\n\n  const m = {\n    t,\n    r,\n    b,\n    l\n  };\n\n  const w = [\n    width,\n    l,  // margin.left\n    r   // margin.right\n  ].reduce(reduce);\n\n  const h = [\n    height,\n    t,  // margin.top\n    b   // margin.bottom\n  ].reduce(reduce);\n\n  const strokes = colors.concat(defaultColors);\n\n  const types = {\n    x: xType || type,\n    y: yType || type\n  };\n\n  const domains = {\n    x: (Array.isArray(xDomain))\n      ? xDomain\n      : createDomainX(types.x, data, pattern),\n    y: (Array.isArray(yDomain))\n      ? yDomain\n      : createDomainY(types.y, data, pattern)\n  };\n\n  const scales = {\n    x: createScaleX(types.x, domains.x, w),\n    y: createScaleY(types.y, domains.y, h)\n  };\n\n  const parsers = {\n    x: createParserX(types.x, pattern),\n    y: createParserY(types.y, pattern)\n  };\n\n  /*\n  const patterns = {\n    x: xPattern || pattern,\n    y: yPattern || pattern\n  };\n\n  const formats = {\n    x: createFormatX(types.x, patterns.x),\n    y: createFormatY(types.y, patterns.y)\n  };\n  */\n\n  const linePath = svg.line()\n    .interpolate(interpolate)\n    .x((d) => scales.x(parsers.x(d)))\n    .y((d) => scales.y(parsers.y(d)));\n\n  const n = data.length;\n\n  const root = select(chart)\n    .selectAll('g.chartGroup');\n\n  root\n    .transition()\n    .duration(750)\n    .attr('transform', `translate(${l}, ${t})`);\n\n  const xAxis = svg.axis()\n    .scale(scales.x)\n    .orient('bottom');\n\n  if (vGrid || grid) {\n    xAxis\n      .tickSize(-h, 6)\n      .tickPadding(10);\n  } else {\n    xAxis\n      .tickSize(0, 6)\n      .tickPadding(16);\n  }\n\n  const xGroup = root\n    .selectAll('g.x.axis');\n\n  xGroup\n    .call(xAxis);\n\n  xGroup\n    .transition()\n    .duration(750)\n    .attr('transform', `translate(0, ${h})`);\n\n  xGroup\n    .selectAll('text.label')\n    .remove();\n\n  if (xLabel) {\n    xGroup\n      .append('text')\n      .attr('class', 'label')\n      .attr('x', (orient === 'right')\n          ? 0\n          : w)\n      .attr('y', (m.b - m.t))\n      .attr('dx', (orient === 'right')\n        ? '0em'\n        : '-.175em')\n      .attr('dy', '-.175em')\n      .style('dominant-baseline', 'ideographic')\n      .style('text-anchor', (orient === 'right')\n        ? 'start'\n        : 'end')\n      .text(xLabel);\n  }\n\n  const yAxis = svg.axis()\n    .scale(scales.y)\n    .orient((orient === 'right')\n      ? 'right'\n      : 'left');\n\n  if (hGrid || grid) {\n    yAxis\n      .tickSize(-w, 6)\n      .tickPadding(10);\n  } else {\n    yAxis\n      .tickSize(0, 6)\n      .tickPadding(16);\n  }\n\n  const yGroup = root\n    .selectAll('g.y.axis');\n\n  yGroup\n    .call(yAxis);\n\n  yGroup\n    .transition()\n    .duration(750)\n    .attr('transform', (orient === 'right')\n      ? `translate(${w}, 0)`\n      : 'translate(0, 0)');\n\n  yGroup\n    .selectAll('text.label')\n    .remove();\n\n  if (yLabel) {\n    yGroup\n      .append('text')\n      .attr('class', 'label')\n      .attr('transform', 'rotate(-90)')\n      .attr('x', 0)\n      .attr('y', (orient === 'right')\n        ? +m.r - m.l\n        : -m.l + m.r)\n      .attr('dx', 0)\n      .attr('dy', (orient === 'right')\n        ? '-.175em'\n        : '1em')\n      .style('dominant-baseline', 'ideographic')\n      .style('text-anchor', 'end')\n      .text(yLabel);\n  }\n\n  const getStroke = (d, i) => strokes[i];\n\n  const chartPathsGroup = root\n    .selectAll('g.chartPathsGroup path')\n      .data(data);\n\n  if (n) {\n    chartPathsGroup\n      .transition()\n      .duration(750)\n      .attr('class', 'line')\n      .style('stroke', getStroke)\n      .attr('d', (d) => linePath(d));\n\n    chartPathsGroup\n      .enter()\n      .append('path')\n      .attr('class', 'line')\n      .style('stroke', getStroke)\n      .attr('d', (d) => linePath(d));\n  }\n\n  chartPathsGroup\n    .exit()\n    .remove();\n}\n\nexport default {\n  initialise,\n  transition\n};\n"]}