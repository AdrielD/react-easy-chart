webpackJsonp([4],{0:function(e,t,a){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var u=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();Object.defineProperty(t,"__esModule",{value:!0});var i=a(4),s=n(i),d=a(44),c=n(d),f=a(40),h=n(f),p=a(41),y=a(32),v=n(y),m=function(e){function t(e){l(this,t);var a=r(this,Object.getPrototypeOf(t).call(this,e));return a.data=a.generateData(),a.state={showToolTip:!1},a.styles={".pie-chart-lines":{stroke:"rgba(0, 0, 0, 1)",strokeWidth:1},".pie-chart-text":{fontSize:"10px",fill:"white"}},a}return o(t,e),u(t,[{key:"getRandomArbitrary",value:function(e,t){return Math.random()*(t-e)+e}},{key:"generateData",value:function(){var e=this,t=[],a=["A","B","C","D","E","F","G"];return a.map(function(a){t.push({key:a,value:e.getRandomArbitrary(1,1e3)})}),t}},{key:"turnOnRandomData",value:function(){this.setState({randomDataIntervalId:setInterval(this.updateData.bind(this),500)})}},{key:"turnOffRandomData",value:function(){clearInterval(this.state.randomDataIntervalId),this.setState({randomDataIntervalId:null})}},{key:"updateData",value:function(){this.data=this.generateData(),this.forceUpdate()}},{key:"mouseOverHandler",value:function(e,t){this.setState({showToolTip:!0,top:t.y-10+"px",left:t.x+10+"px",value:e.value,key:e.data.key})}},{key:"mouseMoveHandler",value:function(e){this.state.showToolTip&&this.setState({top:e.y+"px",left:e.x+10+"px"})}},{key:"mouseOutHandler",value:function(){this.setState({showToolTip:!1})}},{key:"clickHandler",value:function(e){this.setState({dataDisplay:"The amount selected is "+e.value})}},{key:"render",value:function(){var e=this;return s["default"].createElement("div",null,this.state.showToolTip?s["default"].createElement(h["default"],{top:this.state.top,left:this.state.left},"The value of ",this.state.key," is ",this.state.value):null,s["default"].createElement("h2",null,"The React Easy Pie chart"),s["default"].createElement("h3",null,"data"),s["default"].createElement("p",null,"At the most basic the Pie chart can just take a single data file supplied in a JSON format and will render a simple Pie chart. This is a single array of JavaScript objects with a key and value."),s["default"].createElement("pre",null,s["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,p.escapeHTML)("\n <PieChart\n data={[{key: 1, value: 20}, {key: 2, value: 10}, {key: 3, value: 25}]}/>\n ")}})),s["default"].createElement(v["default"],{data:[{key:"A",value:100},{key:"B",value:200},{key:"C",value:50}]}),s["default"].createElement("p",null,"By default the color is automatically assigned. The color can be overwritten for each section of the pie by providing an extra color hex value to the object."),s["default"].createElement("pre",null,s["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,p.escapeHTML)("\n<PieChart\n  data={[{key: 'A', value: 100, color: '#ff0000'}, {key: 'B', value: 200, color: 'green'}, {key: 'C', value: 50, color: 'grey'}]}\n/>\n       ")}})),s["default"].createElement(v["default"],{data:[{key:"A",value:100,color:"#ff0000"},{key:"B",value:200,color:"green"},{key:"C",value:50,color:"grey"}]}),s["default"].createElement("h3",null,"size"),s["default"].createElement("p",null,"The size of the pie chart can be set easily by passing in a size param number."),s["default"].createElement("pre",null,s["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,p.escapeHTML)("\n<PieChart\n  size={50}\n  data={[{key: 'A', value: 100, color: '#ff0000'}, {key: 'B', value: 200, color: 'green'}, {key: 'C', value: 50, color: 'grey'}]}\n/>\n")}})),s["default"].createElement(v["default"],{size:50,data:[{key:"A",value:100,color:"#ff0000"},{key:"B",value:200,color:"green"},{key:"C",value:50,color:"grey"}]}),s["default"].createElement("h3",null,"donut"),s["default"].createElement("p",null,"A donut can be produced by passing in a innerHoleSize prop. This should be less than the size prop."),s["default"].createElement("pre",null,s["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,p.escapeHTML)("\n<PieChart\n  size={150}\n  innerHoleSize={120}\n  data={[{key: 'A', value: 100, color: '#ff0000'}, {key: 'B', value: 200, color: 'green'}, {key: 'C', value: 50, color: 'grey'}]}\n/>\n       ")}})),s["default"].createElement(v["default"],{size:150,innerHoleSize:120,data:[{key:"A",value:100,color:"#ff0000"},{key:"B",value:200,color:"green"},{key:"C",value:50,color:"grey"}]}),s["default"].createElement("h3",null,"padding"),s["default"].createElement("p",null,"padding can be set by passing in a padding prop."),s["default"].createElement("pre",null,s["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,p.escapeHTML)("\n<PieChart\n  padding={50}\n  data={[{key: 'A', value: 100, color: '#ff0000'}, {key: 'B', value: 200, color: 'green'}, {key: 'C', value: 50, color: 'grey'}]}\n/>\n       ")}})),s["default"].createElement(v["default"],{padding:50,data:[{key:"A",value:100,color:"#ff0000"},{key:"B",value:200,color:"green"},{key:"C",value:50,color:"grey"}]}),s["default"].createElement("h3",null,"labels"),s["default"].createElement("p",null,"Labels can be added by passing in a labels boolean prop. The labels will be the key value passed in with the data."),s["default"].createElement("pre",null,s["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,p.escapeHTML)("\n<PieChart\n  labels\n  data={[{key: 'A', value: 100, color: '#ff0000'}, {key: 'B', value: 200, color: 'green'}, {key: 'C', value: 50, color: 'grey'}]}\n/>\n       ")}})),s["default"].createElement(v["default"],{labels:!0,data:[{key:"A",value:100,color:"#ff0000"},{key:"B",value:200,color:"green"},{key:"C",value:50,color:"grey"}]}),s["default"].createElement("h3",null,"style"),s["default"].createElement("p",null,"Styles for the lines and the text can be overridden by passing in a styles object prop."),s["default"].createElement("pre",null,s["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,p.escapeHTML)("\n<PieChart\n  labels\n  styles={{\n    '.chart_lines': {\n      strokeWidth: 0\n    },\n    '.chart_text': {\n      fontFamily: 'arial',\n      fontSize: '15px',\n      textAnchor: 'middle',\n      fill: '#000'\n    }\n  }}\n  data={[{key: 'A', value: 100, color: '#ff0000'}, {key: 'B', value: 200, color: 'green'}, {key: 'C', value: 50, color: 'grey'}]}\n/>      ")}})),s["default"].createElement(v["default"],{labels:!0,styles:{".chart_lines":{strokeWidth:0},".chart_text":{fontFamily:"arial",fontSize:"15px",textAnchor:"middle",fill:"#000"}},data:[{key:"A",value:100,color:"#ff0000"},{key:"B",value:200,color:"green"},{key:"C",value:50,color:"grey"}]}),s["default"].createElement("h3",null,"Mouse over/Mouse Move/Mouse Out"),s["default"].createElement("p",null,"The chart will send out a mouseOver event, mouseMove and mouseOut event. This can be used by your react application in anyway you would require. The event handlers provides the mouse event and the segment data. The mouse event can for instance provide the x and y coordinates which can be used for a tool tip. The data can be segment related to the pie chart."),s["default"].createElement("pre",null,s["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,p.escapeHTML)("\nmouseOverHandler(d, e) {\n this.setState({\n   showToolTip: true,\n   top: e.y,\n   left: e.x,\n   value: d.value,\n   key: d.data.key});\n}\n\nmouseMoveHandler(e) {\n if (this.state.showToolTip) {\n   this.setState({top: e.y, left: e.x});\n }\n}\n\nmouseOutHandler() {\n this.setState({showToolTip: false});\n}\n\n{this.state.showToolTip ? <ToolTip top={this.state.top} left={this.state.left}>The value of {this.state.key} is {this.state.value}</ToolTip> : null}\n\n<PieChart\n data={[{key: 'A', value: 100, color: '#ff0000'}, {key: 'B', value: 200, color: 'green'}, {key: 'C', value: 50, color: 'grey'}]}\n mouseOverHandler={this.mouseOverHandler.bind(this)}\n mouseOutHandler={this.mouseOutHandler.bind(this)}\n mouseMoveHandler={this.mouseMoveHandler.bind(this)}\n size={200}\n padding={10}\n styles={this.styles}\n/>\n       ")}})),s["default"].createElement(v["default"],{data:[{key:"A",value:100,color:"#ff0000"},{key:"B",value:200,color:"green"},{key:"C",value:50,color:"grey"}],mouseOverHandler:this.mouseOverHandler.bind(this),mouseOutHandler:this.mouseOutHandler.bind(this),mouseMoveHandler:this.mouseMoveHandler.bind(this),size:200,padding:10,styles:this.styles}),s["default"].createElement("h3",null,"Click Handler"),s["default"].createElement("p",null,"The chart will send out a click event. The event will pass the data and the event. This allows the data to be presented from the clicking of a segment in any way the react developer requires."),s["default"].createElement("pre",null,s["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,p.escapeHTML)("\n <div>\n   <div style={{display: 'inline-block'}}>\n     <PieChart\n       data={[{key: 'A', value: 100, color: '#ff0000'}, {key: 'B', value: 200, color: 'green'}, {key: 'C', value: 50, color: 'grey'}]}\n       clickHandler={(d) => this.setState({dataDisplay: `The value of ${d.data.key} is ${d.value}`})}\n     />\n   </div>\n   <div style={{display: 'inline-block', verticalAlign: 'top'}}>\n   {this.state.dataDisplay ? this.state.dataDisplay : 'Click on a segment to show the value'}\n   </div>\n </div>\n     ")}})),s["default"].createElement("div",null,s["default"].createElement("div",{style:{display:"inline-block"}},s["default"].createElement(v["default"],{data:[{key:"A",value:100,color:"#ff0000"},{key:"B",value:200,color:"green"},{key:"C",value:50,color:"grey"}],clickHandler:function(t){return e.setState({dataDisplay:"The value of "+t.data.key+" is "+t.value})}})),s["default"].createElement("div",{style:{display:"inline-block",verticalAlign:"top"}},this.state.dataDisplay?this.state.dataDisplay:"Click on a segment to show the value")),s["default"].createElement("h3",null,"Updating the data"),s["default"].createElement("p",null,"By selecting the button below to start the random data you can see a simulation of the performance if a data feed is passed in. React provides the functionality to only update the elements of the dom when required so will just change the path attributes. The data is passed in as a react param only and as soon as that data changes the chart will reflect that change automatically."),s["default"].createElement("br",null),this.state.randomDataIntervalId?s["default"].createElement("input",{type:"button",value:"Stop random data",onClick:this.turnOffRandomData.bind(this)}):s["default"].createElement("input",{type:"button",value:"Start random data",onClick:this.turnOnRandomData.bind(this)}),s["default"].createElement("pre",null,s["default"].createElement("code",{dangerouslySetInnerHTML:{__html:(0,p.escapeHTML)("\n<PieChart\n labels\n data={this.data}\n/>\n      ")}})),s["default"].createElement(v["default"],{labels:!0,data:this.data}))}}]),t}(s["default"].Component);t["default"]=m,c["default"].render(s["default"].createElement(m,null),document.getElementById("root"))},32:function(e,t,a){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var u=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}();Object.defineProperty(t,"__esModule",{value:!0});var i=a(4),s=n(i),d=a(8),c=a(16),f=a(11),h=a(15),p=n(h),y={".chart_lines":{stroke:"#fff",strokeWidth:1},".chart_text":{fontFamily:"sans-serif",fontSize:"12px",textAnchor:"middle",fill:"#fff"}},v=function(e){function t(){return l(this,t),r(this,Object.getPrototypeOf(t).apply(this,arguments))}return o(t,e),u(t,[{key:"render",value:function(){var e=this.props,t=e.mouseOverHandler,a=e.mouseOutHandler,n=e.mouseMoveHandler,l=e.clickHandler,r=e.styles,o=e.innerHoleSize,u=e.size,i=e.padding,h=e.labels,v=u/2,m=d.svg.arc().outerRadius(v-i).innerRadius(o/2-i),k=d.svg.arc().outerRadius(v-i-20*v/100).innerRadius(v-i-20*v/100),b=d.scale.category20(),g=(0,c.createElement)("svg"),T=(0,d.select)(g).attr("width",u).attr("height",u).append("g").attr("transform","translate("+v+", "+v+")"),E=T.selectAll(".arc").data(d.layout.pie().value(function(e){return e.value})(this.props.data)).enter().append("g");E.append("path").attr("d",m).attr("class","chart_lines").style("fill",function(e,t){return e.data.color?e.data.color:b(t)}).on("mouseover",function(e){return t(e,d.event)}).on("mouseout",function(e){return a(e,d.event)}).on("mousemove",function(){return n(d.event)}).on("click",function(e){return l(e,d.event)}),h&&E.append("text").attr("transform",function(e){return"translate("+k.centroid(e)+")"}).text(function(e){return e.data.key}).attr("class","chart_text").on("click",function(e){return l(e,d.event)});var H=Math.floor(Math.random()*(new Date).getTime());return s["default"].createElement("div",{className:"pie_chart"+H},s["default"].createElement(f.Style,{scopeSelector:".pie_chart"+H,rules:(0,p["default"])({},y,r)}),g.toReact())}}],[{key:"propTypes",get:function(){return{data:s["default"].PropTypes.array.isRequired,innerHoleSize:s["default"].PropTypes.number,size:s["default"].PropTypes.number,padding:s["default"].PropTypes.number,labels:s["default"].PropTypes.bool,styles:s["default"].PropTypes.object,mouseOverHandler:s["default"].PropTypes.func,mouseOutHandler:s["default"].PropTypes.func,mouseMoveHandler:s["default"].PropTypes.func,clickHandler:s["default"].PropTypes.func}}},{key:"defaultProps",get:function(){return{size:200,innerHoleSize:0,padding:2,labels:!1,styles:{},mouseOverHandler:function(){},mouseOutHandler:function(){},mouseMoveHandler:function(){},clickHandler:function(){}}}}]),t}(s["default"].Component);t["default"]=v}});